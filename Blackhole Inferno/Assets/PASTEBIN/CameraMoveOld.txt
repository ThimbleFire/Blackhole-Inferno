    public static CameraMove instance; // Singleton instance
    public RectTransform target; // The target object to orbit around
    public float rotationSpeed = 5f;
    public float zoomSpeed = 25f;

    public float dragSpeed = 1.0f;
    public float inertiaFactor = 1.0f;
    private bool isDragging = false;
    private Vector3 lastMousePos;
    private Vector3 dragVelocity;
        
    private void LateUpdate()
    {
        if (target == null)
            return;
        
        if (Input.GetMouseButtonDown(0))
        {
            isDragging = true;
            lastMousePos = Input.mousePosition;
            dragVelocity = Vector3.zero;
        }
        else if (Input.GetMouseButtonUp(0))
        {
            isDragging = false;
        }

        if (isDragging) {

            float mouseX = Input.GetAxis("Mouse X");
            float mouseY = Input.GetAxis("Mouse Y");

            Vector3 orbitRotation = new Vector3(-mouseY, mouseX, 0f) * rotationSpeed;

            transform.RotateAround(target.position, transform.right, orbitRotation.x);
            transform.RotateAround(target.position, Vector3.up, orbitRotation.y);

            Vector3 currentMousePos = Input.mousePosition;
            dragVelocity = (currentMousePos - lastMousePos) * dragSpeed;
            lastMousePos = currentMousePos;
        }
        else
        {
            transform.RotateAround(target.position, transform.right, -dragVelocity.y * Time.deltaTime);
            transform.RotateAround(target.position, Vector3.up, dragVelocity.x * Time.deltaTime);

            dragVelocity = Vector3.Lerp(dragVelocity, Vector3.zero, Time.deltaTime * inertiaFactor);
        }
        
        // Zoom
        transform.position = target.position - transform.forward * 10;
    }